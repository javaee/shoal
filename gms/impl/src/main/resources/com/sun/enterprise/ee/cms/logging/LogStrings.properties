#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2018 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#used for GMS_LOGGER
no.instance.dsc=GMS1001: Could not get an instance of Distributed State Cache to fetch member details for member: {0}
gms.init=GMS1002: Initialized Group Communication System....
failurenotificationsignals.send.member=GMS1003: Sending FailureNotificationSignals to registered Actions. member: {0} ...
failurerecoverysignals.send.component=GMS1004: Sending FailureRecoveryNotification to component {0} member: {1}
# CAUTION: next line is parsed by GMS QE testing automation. Coordinate any changes with that automation.
failuresuspectedsignals.send.member=GMS1005: Sending FailureSuspectedSignals to registered Actions. member: {0} ...
action.exception=GMS1006: ActionException: {0}
gms.failureSuspectedEventReceived=GMS1007: Received FailureSuspectedEvent for member: {0} of group: {1}
plannedshutdownsignals.send.member=GMS1008: Sending PlannedShutdownSignals to registered Actions for shutdownType {0} member: {1} ...
shutdown.groupshutdown=GMS1009: Leaving GMS group: {0} with shutdown type set to GroupShutdown
shutdown.instanceshutdown=GMS1010: Leaving GMS group: {0} with shutdown type set to InstanceShutdown
interruptedException.occurred.put.eventpacket=GMS1011: InteruptedException occurred when putting EventPacket into viewQueue: {0}
starting.cluster=GMS1012: Starting ClusterManager...
ioexception.occurred.cluster.shutdown=GMS1013: IOException occured while announcing cluster shutdown. {0}
interruptedException.occurred.add.message=GMS1014: Interrupted Exception occured while adding message to Shoal MessageQueue: {0}
member.groupshutdown=GMS1015: Received Group Shutting down message from member: {0} of group: {1}
membership.snapshot.analysis=GMS1016: Analyzing new membership snapshot received as part of event: {0} for member: {1} of group: {2}
# CAUTION: next line is parsed by GMS QE testing automation.
plannedshutdownevent.announcement=GMS1017: Received PlannedShutdownEvent Announcement from member: {0} with shutdown type: {1} of group: {2}
systemadv.not.contain.customtag=GMS1018: The SystemAdvertisement did not contain the custom tag value: {0}
# CAUTION: next line is parsed by GMS QE testing automation. Coordinate any changes with that automation.
member.failed=GMS1019: member: {0} of group: {1} has failed
event.message=GMS1020: Event: {0}
peer.involved=GMS1021: Peer Involved: {0}
view.message=GMS1022: View: {0}
rejoin.subevent.replaced=GMS1023: Replaced rejoin subevent for member: '{0}' with '{1}'
# CAUTION: next line is parsed by GMS QE testing automation. Coordinate any changes with that automation.
viewwindow.adding.join.member=GMS1024: Adding Join member: {0} group: {1} StartupState: {2} {3}
# CAUTION: next line is parsed by GMS QE testing automation. Coordinate any changes with that automation.
viewwindow.adding.joined.ready.member=GMS1025: Adding Joined And Ready member: {0} group: {1} StartupState: {2} {3}
# CAUTION: next line is parsed by GMS QE testing automation. Coordinate any changes with that automation.
# there should be no GMS log event prefix on viewwindow.rejoining. It is appended with text that already has a GMS log event prefix.
viewwindow.rejoining=rejoining: missed reporting past FAILURE of this instance that had joined the group at {0}
mgmt.clustermanager.send.failed=GMS1027: ClusterManager.send: message {0} not sent to {1}
mgmt.clustermanager.send.membernotinview=GMS1028: ClusterManager.send: Cluster View does not contain member: {0} hence will not send message.
mgmt.clustermanager.broadcast.failed=GMS1029: ClusterManager.send: broadcast of message {0} failed
mgmt.clustermanager.nullmessage=GMS1030:  ClusterManger.receiveMessageEvent: Received a null message
mgmt.unknownMessage=GMS1031: Received an unknown message
mgmt.clustermanager.invalidbindinterfaceaddress=GMS1032: invalid bindInterfaceEndpointAddress computed from property {0} value={1}
mgmt.clusterviewmanager.skipnotify=GMS1033: no changes from previous view, skipping notification of listeners for cluster view event {0} from member: {1} group: {2}
mgmt.healthmonitor.lwrmulticastioexception=GMS1034: Could not instantiate LWRMulticast: {0}
mgmt.healthmonitor.processmemberstatequery=GMS1035: processMemberStateQuery failed to send memberStateResponse msg to {0} send returned false
mgmt.healthmonitor.invalidquery=GMS1036: ignoring memberstatequery. SysAdv is null
mgmt.healthmonitor.lwrmulticast.send.failed=GMS1037: Could not send the message via LWRMulticast: {0}
mgmt.healthmonitor.nosenderadv=GMS1038: ignoring memberStateResponse, received a memberstateresponse with no sender advertisement
mgmt.healthmonitor.watchdog=GMS1039: WATCHDOG notification for member: {0} id: {1} from watchdog: {2} wasMaster: {3}
mgmt.heatlhmonitor.ready=GMS1040: Calling reportMyState() with READY...
mgmt.healthmonitor.alreadydead=GMS1041: assignAndReportFailure already called for member: {0} ignoring this invocation since member already declared DEAD {1}
mgmt.healthmonitor.reportstatefailed=GMS1042: failed to send heartbeatmessage with state={0} to {1}. Reason: {2}
mgmt.healthmonitor.reportotherstatefailed=GMS1043: send failed to report member: {0} state={1} to group: {2}. Reason: {3}
mgmt.healthmonitor.threaduncaughtexception=GMS1044: Uncaught Throwable in healthMonitorThread {0}:{1}
mgmt.healthmonitor.timestampconversionexception=GMS1045: Exception occurred during time stamp conversion: {0}
mgmt.healthmonitor.removemasteradvfail=GMS1046:  {0} member: {1} does not exist in local ClusterView
mgmt.healthmonitor.failedwatchdognotify=GMS1047: broadcast send returned false. failed WATCHDOG notification of failed member: {0} to group: {1}. Reason: {2}
mgmt.masternode.missingna=GMS1048: Missing NODEADV message element. message = {0}
mgmt.masternode.noview=GMS1049: New View Received without corresponding ViewChangeEvent details
mgmt.masternode.staleview=GMS1050: Received an older clusterView sequence {0} of size: {1}. Current sequence: {2} discarding out of sequence view.
mgmt.masternode.staleviewnotify=GMS1051: Received a stale clusterview, older clusterview sequence {0}. Current sequence: {1} discarding out of sequence view.  Notified listeners of ChangeEvent={2} from {3} for group: {4}
mgmt.masternode.unreportedmasterfailure=GMS1052: Previously elected Master node {0} has restarted. There was no failure notification sent out for it.
mgmt.masternode.restarted=GMS1053: member: {0} was restarted at {1,time,full} on {1,date}.
mgmt.masternode.nofailurereported=GMS1054: Note that there was no Failure notification sent out for this instance that was previously started at {0,time,full} on {0,date}
mgmt.masternode.dupmasternodemsg=GMS1055: receiveMessageEvent: ignored duplicate master node message masterViewSeqId: {0} from member: {1} message={2}
mgmt.masternode.nullmessage=GMS1056: Received a null message
mgmt.masternode.announcemasternode=GMS1057: Announcing Master Node designation for member: {1} of group: {2}. Local view contains {0} entries
# CAUTION: next line is parsed by GMS QE testing automation.
mgmt.masternode.assumingmasternode=GMS1058: Assuming Master Node designation member: {0} for group: {1}
mgmt.masternode.sendmsgfailed=GMS1059: send unexpectedly returned false sending messge {0} to member: {1}
mgmt.masternode.broadcastmsgfailed=GMS1060: send unexpectedly returned false broadcasting messge {0} to group: {1}
mgmt.masternode.registeredlistener=GMS1061: MasterNode message listener is registered for member: {0} group: {1}
mgmt.masternode.groupstartcomplete=GMS1062: GroupStart for group: {0} State: {1} {2}
mgmt.masternode.missgroupstartupcomplete=GMS1063: missed GroupStartupComplete message. Timed out group startup after {0} secs
mgmt.masternode.processmsgexception=GMS1064: MasterNode.ProcessOutstandingMessages.run: ignoring exception {0}
mgmt.masternode.processmsgcompleted=GMS1065: Completed processing outstanding master node messages for member: {0} group: {1} outstandingMessages to process: {2}
grizzlynetmgr.invalidmcastaddr=GMS1066: invalid multicast address: {0} defaulting to {1}. Valid multicast address is a Class D IP address in the range 224.0.0.0-239.255.255.255 inclusive. Address 224.0.0.0 is reserved and should not be used.
grizzlynetmgr.invalidbindaddr=GMS1067: GrizzlyNetworkManager.configure: unable to configure NetworkInterfaceName due to {0}     
absnetmgr.beforefailed=GMS1068: failed to execute beforeDispatchingMessage()
absnetmgr.afterfailed=GMS1069: failed to execute afterDispatchingMessage()
absnetmgr.receivemsg=GMS1070: failed to receive a message: type = {0}
blockingiomcast.damaged=GMS1071: damaged multicast packet discarded
blockingiomcast.failprocessing=GMS1072: failed to process a received message={0}
blockingiomcast.exceedsmaxsize=GMS1073: Multicast datagram of size {0} exceeds max multicast size {1}
blockingiomcast.mcastreceivefailure=GMS1074: failure during multicast receive {0}
blockingiomcast.receiveprocess.uncaughtthrowable=GMS1075: Uncaught Throwable {0} in thread {1}
blockingiomcast.fail.set.timetolive=GMS1076: unable to set multicast socket timeToLive to {0}
messageImpl.msg.too.big=GMS1077: total message size is too big: size = {0}, max size = {1}
netutil.deserialize.failure=GMS1078: NetworkUtility.deserialized current objects: thread={2} messages={0} failed while deserializing name={1}
netutil.no.available.ports=GMS1079: Fatal error. No available ports exist for {0} in range {1} to {2}
dsc.no.ctx=GMS1080: Can not find GMSContext for group: {0}
dsc.sync.exception=GMS1081: GMSException during DistributedStateCache Sync....
dsc.send.failed=GMS1082: DistributedStateCacheImpl.sendMessage failed to member: {0}  message: {1}
gmsctx.assume.groupleader=GMS1083: Assuming group leadership to shutdown group: {0}
group.handle.sendmessage.failed=GMS1084: GroupHandleImpl.sendMesage: could not send message {0} for component {1} to member: {2} exception: {3}
gh.dsc.force.sync.failed=GMS1085: Force Syncing of DistributedStateCache failed: {0}
msg.wdw.thread.shutdown=GMS1086: MessageWindow thread for group {0} terminated due to shutdown notification with {1} unprocessed messages
msg.wdw.exception.processing.msg=GMS1087: ignoring exception during message window processing
msg.wdw.thread.terminated=GMS1088: MessageWindow thread for group: {0} terminated due to shutdown notification
util.sysadv.missing.custom.tag=GMS1089: Missing expected tag name: {0} in SystemAdvertisement for member: {1}. Defaulting value to null.
view.window.eventhandler.exception=GMS1090: handled exception processing event packet {0}
view.window.thread.terminated=GMS1091: View Window event processing thread for group: {0} terminated normally
# CAUTION: next line is parsed by GMS QE testing automation. Coordinate any changes with that automation.
view.window.view.change=GMS1092: GMS View Change Received for group: {0} : Members in view for {1}(before change analysis) are :\n{2}
# CAUTION: next line is parsed by GMS QE testing automation.
view.window.groupleader.notify=GMS1093: adding GroupLeadershipNotification signal leadermember: {0} of group: {1}
msg.action.unhandled.exception=GMS1094: handled unexpected exception {0} when calling registered application callback method {1}.processNotification.  The method should have handled this exception.
gms.join=GMS1095: member: {0} is joining group: {1} ...
gms.leave=GMS1096: member: {0} is leaving group: {1}
gms.group.shutdown=GMS1097: GMS:Announcing GroupShutdown to group: {0} with State = {1}
gms.group.startup=GMS1098: GMS:Announcing GroupStartup[{0}] for group: {1} members: {2}
# CAUTION: next line is parsed by GMS QE testing automation. Coordinate any changes with that automation.
gms.ready=GMS1099: GMS:Reporting Joined and Ready state to group: {0}
recovery.selector.invalid.mode=GMS1100: resolveRecoveryTarget() returning false due to unimplemented RecoverySelectorMode: {0} for failed member: {1} group: {2}
recovery.selector.failed=GMS1101: RecoveryTargetSelection:Chronological Successor algorithm failed to select a recovery member for failed member: {0} revert to selecting first member in view as RecoveryTarget. view prior to reported failure: {1}
# CAUTION: next line is parsed by GMS QE testing automation.
recovery.selector.appointed=GMS1102: Appointed Recovery Server: {0} for failed member: {1} for group: {2}
router.msg.handler.exception=GMS1103: handled unexpected exception {0} processing message signal {1}
router.shutdown.unprocessed=GMS1104: shutdown: cleared queue with {0} unprocessed events
router.shutdown.unprocessed.signal=GMS1105: shutdown: unprocessed signal: {0}
sig.handler.unhandled=GMS1106:  exiting due unhandled exception in thread {0}
sig.handler.thread.terminated=GMS1107: SignalHandler task named {0} exiting
sig.handler.ignoring.exception=GMS1108: Ignoring exception while running action handler. Handler should have handled following unchecked exception {0}
grizzly.netmgr.localPeerId.null=GMS1109: local peerid for member: {0} is unexpectedly not set
mgmt.blockingiomulticast.threadcomplete=GMS1110: Thread {0} has completed.
mgmt.reliable.mcast.resend=GMS1111: resend broadcast event with masterViewId: {0} to member: {1} of group: {2} resends={3} {4}
mgmt.reliable.mcast.resend.failed=GMS1112: unable to find message to resend broadcast event with masterViewId: {0} to member: {1} of group: {2}
mgmt.masternode.missed.change.events=GMS1113: identified missed MasterViewChangeEvents from master member: {0} latestMasterViewSeqID={1} missed masterViewSeqId={2} lastCheckedMasterViewID: {3}
mgmt.masternode.collision=GMS1114: Master node role collision with member: {0} .... attempting to resolve
router.stats.monitor.msgqueue.high.water=GMS1115: router signal queue high water mark: {0} signal queue capacity: {1}
router.no.msghandler.for.targetcomponent=GMS1116: unable to deliver message to a non-existent target component {0} for group: {1}. Note: only reported for first message.
netutil.validate.bind.address.exception=GMS1117: Could not validate binding address "{0}" due to {1}
netutil.validate.bind.not.bound=GMS1118: Socket created but could not bind to address "{0}"
grizzlytcpconnectorwrapper.wait.for.getconnector=GMS1119: waited for {0} ms to acquire a connector handler
router.signal.queue.blocking=signal processing blocked due to signal queue being full for {0} ms. Router signal queue capacity: {1}
mgmt.blockingiomulticast.setinterfacefailed=GMS1120: Unable to configure MulticastSocket to use specified interface with address: {0}. Continuning with default MulticastSocket interface of {1}.
mgmt.disableUDPmulticast=GMS1121: Disabling UDP multicast. {0}={1}
netutil.invalidPreferIPv6Addresses=GMS1122: Unable to access or invalid value for JDK property java.net.preferIPv6Addresses due to exception {0}, defaulting to false.

